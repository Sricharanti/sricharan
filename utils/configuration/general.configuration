#!/bin/sh

###############################################################################
# Testsuites configuration script
# Author: Leed Aguilar
# Date: Tue Jun  7 10:58:31 CDT 2011
# Description: General configuration script
###############################################################################

# These variables don't need to be modified
export POSTFIX=`date "+%Y%m%d-%H%M%S"`
export TESTROOT=${PWD}
export TESTBIN=${PWD}/../bin
export MODDIR=${PWD}/../modules
export TESTSCRIPT=${PWD}/helper
export TMPBASE=${TESTROOT}/tmp
export TMPFILE=${TMPBASE}/tmp.$POSTFIX
export CMDFILE=cmd.$POSTFIX
export TESTDIR=${TESTROOT}/test
export PRETTY_PRT=""
export VERBOSE=""
export OUTPUTFILE=${TMPBASE}/output.$POSTFIX
export LOGFILE=${TMPBASE}/log.$POSTFIX
export DURATION=""
export PATH="${TESTROOT}:${TESTBIN}:${TESTSCRIPT}:${PATH}"
export TC_SCENARIO="${TESTROOT}/scenarios"
export SCENARIO_NAMES=""

# Utilities
export UTILS_DIR=$TESTROOT/../../utils/
export UTILS_DIR_BIN=$UTILS_DIR/bin
export UTILS_DIR_HANDLERS=$UTILS_DIR/handlers
export UTILS_DIR_SCRIPTS=$UTILS_DIR/scripts
export UTILS_DIR_MONKEY=$UTILS_DIR_SCRIPTS/monkey

export PATH="$PATH:$UTILS_DIR_BIN:$UTILS_DIR_HANDLERS:$UTILS_DIR_SCRIPTS"


# Check if procfs is mounted, if not set it up
test -d /proc/1/ || mount -t proc proc /proc
export PROCFS_INTERRUPTS=/proc/interrupts

# Check if sysfs is mounted, if not set it up
test -d /sys/kernel/ || mount -t sysfs sysfs /sys
. ${UTILS_DIR}/configuration/sysfs.configuration

if [ $? -eq 0 ]; then
	echo "INFO: Syfs configuration completed"
else
	echo "FATAL: Sysfs configuration file with errors"
fi

# Creation & clean up of temporal directory
export UTILS_DIR_TMP=$UTILS_DIR/tmp
test -d $UTILS_DIR_TMP || mkdir -p $UTILS_DIR_TMP
rm -f $UTILS_DIR_TMP/*

# Setup configuration for handlers scripts
. ${UTILS_DIR}/configuration/handlers.configuration

if [ $? -eq 0 ]; then
	echo "INFO: Handlers configuration completed"
else
	echo "FATAL: Handlers configuration file with errors"
fi

if [ -f /var/log/dmesg ]; then
	alias dmesg='cat /var/log/dmesg'
fi

#-----------------------------------------------------------------------------------
# GPIO Driver Specific
#-----------------------------------------------------------------------------------

if [ `cat /proc/cpuinfo| grep -ic OMAP4` ]; then
	export GPIO_MAX_LINES=191
else
	export GPIO_MAX_LINES=209
fi

export GPIO_HW_MODULE="OMAP GPIO hardware version"
export GPIO_FIRST_LINE=0
export GPIO_INVALID_RANGE_INITIAL=-5
export GPIO_INVALID_RANGE_FINAL=-1
export GPIO_SMP_TEST_ITERATIONS=20
export GPIO_TEST_MODULE_NAME=gpio_test.ko
export GPIO_TEST_MODULE=$MODDIR/$GPIO_TEST_MODULE_NAME
export GPIO_TEST_MODULE_PROCFS_RESULT=/proc/driver/gpio_test_result
export DEV_GPIOTEST=/dev/gpiotest
export MAIN_TEST=$TESTBIN/main_test
# export GPIO_PREEMPT=gpio.ko
# export PREEMPT_MODULE=$MODDIR/$GPIO_PREEMPT
# [ -f  "$DEV_GPIOTEST" ] && mknod /dev/gpiotest c 241 0

#-----------------------------------------------------------------------------------
# I2C Driver Specific
#-----------------------------------------------------------------------------------

# Adapters
export I2C_ADAPTERS="1 2 3 4"
export I2C_ADAPTER_1=1
export I2C_ADAPTER_2=2
export I2C_ADAPTER_3=3
export I2C_ADAPTER_4=4
# Operating mode
export I2C_STANDARD_MODE=100
export I2C_FAST_MODE=400
# Test case IDs for runtestcase.sh script
export I2C_EXISTING_DEVICES=1
export I2C_MULTIPLE_DEVICES=2
export I2C_NON_EXISTING_DEVICES=3
export I2C_TRANSFER_CANCELLATION=4
export I2C_INTERRUPT_MODE=5
# General variables
export I2C_INTERRUPT_PREFIX=omap_i2c
export I2C_TEMP_FILE_1=${TMPBASE}/i2c.test.file.1
export I2C_TEMP_FILE_2=${TMPBASE}/i2c.test.file.2
export I2C_HEAD_OPTION="-n "
export I2C_TAIL_OPTION="-n "
export I2C_ADAPTER_INFO=None
export I2C_MODE=None
export I2C_REG_INVALID=0x2D
# Speed, Addresses, Registers, IRQs
if [ `cat /proc/cpuinfo| grep -ic OMAP4` -ne 0 ];then
	export I2C_HIGH_SPEED_MODE=2100
	export I2C_ADDRESSES="0x48 0x49 0x4A"
	export I2C_REG_1=0x48
	export I2C_REG_1_VALUE_INITIAL=0x17
	export I2C_REG_2=0x48
	export I2C_REG_2_VALUE_INITIAL=0x17
	export INT_24XX_I2C1_IRQ=88
	export INT_24XX_I2C2_IRQ=89
	export INT_34XX_I2C3_IRQ=93
	export INT_44XX_I2C4_IRQ=94

else
	export I2C_HIGH_SPEED_MODE=2600
	export I2C_ADDRESSES="0x48 0x49 0x4A 0x4B"
	export I2C_REG_1=0x49
	export I2C_REG_1_VALUE_INITIAL=0x01
	export I2C_REG_2=0x4A
	export I2C_REG_2_VALUE_INITIAL=0xD4
	export INT_24XX_I2C1_IRQ=56
	export INT_24XX_I2C2_IRQ=57
	export INT_34XX_I2C3_IRQ=61
fi

#-----------------------------------------------------------------------------------
# PM Driver Specific
#-----------------------------------------------------------------------------------

export PMD_WAKEUP_TIMER_DEFAULT=1
export VDD1_OPP1_FREQ=300000
export VDD1_OPP2_FREQ=600000
export VDD1_OPP3_FREQ=800000
export VDD1_OPP4_FREQ=1000000
export DSP_FREQ_TMP=$PM_DEBUGFS_DIRECTORY/clock/virt_26m_ck/osc_sys_ck/sys_ck
export DSP_FREQ=$DSP_FREQ_TMP/dpll2_ck/dpll2_m2_ck/iva2_ck/rate

#-----------------------------------------------------------------------------------
# Timer Driver Specific
#-----------------------------------------------------------------------------------`

GPTIMER=`dmesg | grep -i gptimer`
export RESERVED_GPTIMER=`echo $GPTIMER | awk '{print $4}'| cut -c '8'`
export MAXGPTIMERS=12

#-----------------------------------------------------------------------------------
# HSUART Driver Specific
#-----------------------------------------------------------------------------------

export UART_TEST_PORT1="ttyO0"
export UART_TEST_PORT2="ttyO1"
export UART_TEST_PORT3="ttyO2"
export UART_TEST_PORT4="ttyO3"

export UART_TEST_PORT1_IRQ="104"
export UART_TEST_PORT2_IRQ="105"
export UART_TEST_PORT3_IRQ="106"
export UART_TEST_PORT4_IRQ="102"

#-----------------------------------------------------------------------------------

# Remove all existing references for handlerError.shz
handlerError.sh "clean"

# End of file
