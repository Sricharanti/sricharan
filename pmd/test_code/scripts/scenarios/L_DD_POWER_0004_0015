###############################################################################
# Scenario: L_DD_POWER_0004_0015
# Author  : Leed Aguilar
# Date    : 11/11/10
# Testing : Suspend/Resume the system via timeout 200 times: Boot platform,
#           release wakelocks, let the system go to suspend via timeout, then
#           resume to ensure that system works properly
# Results : At resume, you should get the console prompt back and there should
#           be any lockup and OSWR and DEVICE-OFF counters should increase
###############################################################################

# Begin L_DD_POWER_0004_0015

0000 set -x; is_android_ready.sh

# Set the max screen timeout (30 min)
0001 set -x; handlerAndroidSqlite3.sh set "system" "screen_off_timeout" "15000"

# set a dummy wakelock to avoid going to suspend
0002 set -x; handlerAndroidPM.sh wakelock hold dummy

# Verify that the screen is ON
0003 set -x; android_display_switch.sh ON

# Suspend/Resume for 5 seconds via timeout 200 times
0004 set -x; handlerCmd.sh iterate 'handlerPowerTransitionStats.sh log "core_pwrdm" "RET" "before"; handlerPowerTransitionStats.sh log "core_pwrdm" "RET-LOGIC-OFF" "before"; handlerPowerTransitionStats.sh log "DEVICE-OFF" "DEVICE-OFF" "before"; android_display_switch.sh ON; handlerAndroidPM.sh suspend android timeout 5; handlerAndroidPM.sh resume android; handlerPowerTransitionStats.sh log "core_pwrdm" "RET" "after"; handlerPowerTransitionStats.sh log "core_pwrdm" "RET-LOGIC-OFF" "after"; handlerPowerTransitionStats.sh log "DEVICE-OFF" "DEVICE-OFF" "after"; handlerPowerTransitionStats.sh compare "core_pwrdm" "RET" "before" "after"; handlerPowerTransitionStats.sh compare "core_pwrdm" "RET-LOGIC-OFF" "before" "after"; handlerPowerTransitionStats.sh compare "DEVICE-OFF" "DEVICE-OFF" "before" "after"' 200 2

# Set the timeout value to the max value (30 minutes) for further testing
0005 set -x; handlerAndroidSqlite3.sh set "system" "screen_off_timeout" "1800000"

# End L_DD_POWER_0004_0015
