From 8c37ba6de6f5ecf914b1308f1370a892f4b9354a Mon Sep 17 00:00:00 2001
From: Leed Aguilar <leed.aguilar@ti.com>
Date: Mon, 7 Nov 2011 14:33:08 -0500
Subject: [PATCH 2/2] Export API's for testing the clock domain framework
 From: Leed Aguilar <leed.aguilar@ti.com>
 Date: Mon, 7 Nov 2011 14:33:08 -0500
 Subject: [PATCH 2/2] ARM: OMAP4: clockdomains: Export Clock Domain APIs.

Export API's for testing the clock domain framework
igned-off-by: Leed Aguilar <leed.aguilar@ti.com>
Signed-off-by: Mariia Nagul <x0171643@ti.com>
---
 arch/arm/mach-omap2/clockdomain.c |   32 ++++++++++++++++----------------
 1 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-omap2/clockdomain.c b/arch/arm/mach-omap2/clockdomain.c
index 583cc3d..9b06548 100644
--- a/arch/arm/mach-omap2/clockdomain.c
+++ b/arch/arm/mach-omap2/clockdomain.c
@@ -331,7 +331,7 @@ struct clockdomain *clkdm_lookup(const char *name)
 
 	return clkdm;
 }
-
+EXPORT_SYMBOL(clkdm_lookup);
 /**
  * clkdm_for_each - call function on each registered clockdomain
  * @fn: callback function *
@@ -380,7 +380,7 @@ struct powerdomain *clkdm_get_pwrdm(struct clockdomain *clkdm)
 	return clkdm->pwrdm.ptr;
 }
 
-
+EXPORT_SYMBOL(clkdm_get_pwrdm);
 /* Hardware clockdomain control */
 
 /**
@@ -425,7 +425,7 @@ int clkdm_add_wkdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
 
 	return ret;
 }
-
+EXPORT_SYMBOL(clkdm_add_wkdep);
 /**
  * clkdm_del_wkdep - remove a wakeup dependency from clkdm2 to clkdm1
  * @clkdm1: wake this struct clockdomain * up (dependent)
@@ -466,7 +466,7 @@ int clkdm_del_wkdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
 
 	return ret;
 }
-
+EXPORT_SYMBOL(clkdm_del_wkdep);
 /**
  * clkdm_read_wkdep - read wakeup dependency state from clkdm2 to clkdm1
  * @clkdm1: wake this struct clockdomain * up (dependent)
@@ -505,7 +505,7 @@ int clkdm_read_wkdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
 	/* XXX It's faster to return the atomic wkdep_usecount */
 	return arch_clkdm->clkdm_read_wkdep(clkdm1, clkdm2);
 }
-
+EXPORT_SYMBOL(clkdm_read_wkdep);
 /**
  * clkdm_clear_all_wkdeps - remove all wakeup dependencies from target clkdm
  * @clkdm: struct clockdomain * to remove all wakeup dependencies from
@@ -526,7 +526,7 @@ int clkdm_clear_all_wkdeps(struct clockdomain *clkdm)
 
 	return arch_clkdm->clkdm_clear_all_wkdeps(clkdm);
 }
-
+EXPORT_SYMBOL(clkdm_clear_all_wkdeps);
 /**
  * clkdm_add_sleepdep - add a sleep dependency from clkdm2 to clkdm1
  * @clkdm1: prevent this struct clockdomain * from sleeping (dependent)
@@ -570,7 +570,7 @@ int clkdm_add_sleepdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
 
 	return ret;
 }
-
+EXPORT_SYMBOL(clkdm_add_sleepdep);
 /**
  * clkdm_del_sleepdep - remove a sleep dependency from clkdm2 to clkdm1
  * @clkdm1: prevent this struct clockdomain * from sleeping (dependent)
@@ -615,7 +615,7 @@ int clkdm_del_sleepdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
 
 	return ret;
 }
-
+EXPORT_SYMBOL(clkdm_del_sleepdep);
 /**
  * clkdm_read_sleepdep - read sleep dependency state from clkdm2 to clkdm1
  * @clkdm1: prevent this struct clockdomain * from sleeping (dependent)
@@ -657,7 +657,7 @@ int clkdm_read_sleepdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
 	/* XXX It's faster to return the atomic sleepdep_usecount */
 	return arch_clkdm->clkdm_read_sleepdep(clkdm1, clkdm2);
 }
-
+EXPORT_SYMBOL(clkdm_read_sleepdep);
 /**
  * clkdm_clear_all_sleepdeps - remove all sleep dependencies from target clkdm
  * @clkdm: struct clockdomain * to remove all sleep dependencies from
@@ -678,7 +678,7 @@ int clkdm_clear_all_sleepdeps(struct clockdomain *clkdm)
 
 	return arch_clkdm->clkdm_clear_all_sleepdeps(clkdm);
 }
-
+EXPORT_SYMBOL(clkdm_clear_all_sleepdeps);
 /**
  * clkdm_sleep - force clockdomain sleep transition
  * @clkdm: struct clockdomain *
@@ -706,7 +706,7 @@ int clkdm_sleep(struct clockdomain *clkdm)
 
 	return arch_clkdm->clkdm_sleep(clkdm);
 }
-
+EXPORT_SYMBOL(clkdm_sleep);
 /**
  * clkdm_wakeup - force clockdomain wakeup transition
  * @clkdm: struct clockdomain *
@@ -739,7 +739,7 @@ int clkdm_wakeup(struct clockdomain *clkdm)
 
 	return ret;
 }
-
+EXPORT_SYMBOL(clkdm_wakeup);
 /**
  * clkdm_allow_idle - enable hwsup idle transitions for clkdm
  * @clkdm: struct clockdomain *
@@ -770,7 +770,7 @@ void clkdm_allow_idle(struct clockdomain *clkdm)
 	arch_clkdm->clkdm_allow_idle(clkdm);
 	pwrdm_clkdm_state_switch(clkdm);
 }
-
+EXPORT_SYMBOL(clkdm_allow_idle);
 /**
  * clkdm_deny_idle - disable hwsup idle transitions for clkdm
  * @clkdm: struct clockdomain *
@@ -799,7 +799,7 @@ void clkdm_deny_idle(struct clockdomain *clkdm)
 
 	arch_clkdm->clkdm_deny_idle(clkdm);
 }
-
+EXPORT_SYMBOL(clkdm_deny_idle);
 /**
  * clkdm_is_idle - Check if the clkdm hwsup/autoidle is enabled
  * @clkdm: struct clockdomain *
@@ -870,7 +870,7 @@ int clkdm_clk_enable(struct clockdomain *clkdm, struct clk *clk)
 
 	return 0;
 }
-
+EXPORT_SYMBOL(clkdm_clk_enable);
 /**
  * clkdm_clk_disable - remove an enabled downstream clock from this clkdm
  * @clkdm: struct clockdomain *
@@ -918,4 +918,4 @@ int clkdm_clk_disable(struct clockdomain *clkdm, struct clk *clk)
 
 	return 0;
 }
-
+EXPORT_SYMBOL(clkdm_clk_disable);
-- 
1.7.0.4

