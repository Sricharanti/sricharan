From 4e6388dc303a59b5ce088f835b547736075180a1 Mon Sep 17 00:00:00 2001
From: Leed Aguilar <leed.aguilar@ti.com>
Date: Mon, 7 Nov 2011 14:33:08 -0500
Subject: [PATCH 2/2] ARM: OMAP4: clockdomains: Export Clock Domain APIs.

Export API's for testing the clock domain framework

Change-Id: Ia78ef6a6083f7317dc6db42723742d0d3a542dfa
Signed-off-by: Leed Aguilar <leed.aguilar@ti.com>
---
 arch/arm/mach-omap2/clockdomain.c |   17 +++++++++++++++++
 1 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/clockdomain.c b/arch/arm/mach-omap2/clockdomain.c
index 583cc3d..57ad2fb 100644
--- a/arch/arm/mach-omap2/clockdomain.c
+++ b/arch/arm/mach-omap2/clockdomain.c
@@ -331,6 +331,7 @@ struct clockdomain *clkdm_lookup(const char *name)

	return clkdm;
 }
+EXPORT_SYMBOL(clkdm_lookup);

 /**
  * clkdm_for_each - call function on each registered clockdomain
@@ -363,6 +364,7 @@ int clkdm_for_each(int (*fn)(struct clockdomain *clkdm, void *user),

	return ret;
 }
+EXPORT_SYMBOL(clkdm_for_each);


 /**
@@ -379,6 +381,7 @@ struct powerdomain *clkdm_get_pwrdm(struct clockdomain *clkdm)

	return clkdm->pwrdm.ptr;
 }
+EXPORT_SYMBOL(clkdm_get_pwrdm);


 /* Hardware clockdomain control */
@@ -425,6 +428,7 @@ int clkdm_add_wkdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)

	return ret;
 }
+EXPORT_SYMBOL(clkdm_add_wkdep);

 /**
  * clkdm_del_wkdep - remove a wakeup dependency from clkdm2 to clkdm1
@@ -466,6 +470,7 @@ int clkdm_del_wkdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)

	return ret;
 }
+EXPORT_SYMBOL(clkdm_del_wkdep);

 /**
  * clkdm_read_wkdep - read wakeup dependency state from clkdm2 to clkdm1
@@ -505,6 +510,7 @@ int clkdm_read_wkdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
	/* XXX It's faster to return the atomic wkdep_usecount */
	return arch_clkdm->clkdm_read_wkdep(clkdm1, clkdm2);
 }
+EXPORT_SYMBOL(clkdm_read_wkdep);

 /**
  * clkdm_clear_all_wkdeps - remove all wakeup dependencies from target clkdm
@@ -526,6 +532,7 @@ int clkdm_clear_all_wkdeps(struct clockdomain *clkdm)

	return arch_clkdm->clkdm_clear_all_wkdeps(clkdm);
 }
+EXPORT_SYMBOL(clkdm_clear_all_wkdeps);

 /**
  * clkdm_add_sleepdep - add a sleep dependency from clkdm2 to clkdm1
@@ -570,6 +577,7 @@ int clkdm_add_sleepdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)

	return ret;
 }
+EXPORT_SYMBOL(clkdm_add_sleepdep);

 /**
  * clkdm_del_sleepdep - remove a sleep dependency from clkdm2 to clkdm1
@@ -615,6 +623,7 @@ int clkdm_del_sleepdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)

	return ret;
 }
+EXPORT_SYMBOL(clkdm_del_sleepdep);

 /**
  * clkdm_read_sleepdep - read sleep dependency state from clkdm2 to clkdm1
@@ -657,6 +666,7 @@ int clkdm_read_sleepdep(struct clockdomain *clkdm1, struct clockdomain *clkdm2)
	/* XXX It's faster to return the atomic sleepdep_usecount */
	return arch_clkdm->clkdm_read_sleepdep(clkdm1, clkdm2);
 }
+EXPORT_SYMBOL(clkdm_read_sleepdep);

 /**
  * clkdm_clear_all_sleepdeps - remove all sleep dependencies from target clkdm
@@ -678,6 +688,7 @@ int clkdm_clear_all_sleepdeps(struct clockdomain *clkdm)

	return arch_clkdm->clkdm_clear_all_sleepdeps(clkdm);
 }
+EXPORT_SYMBOL(clkdm_clear_all_sleepdeps);

 /**
  * clkdm_sleep - force clockdomain sleep transition
@@ -706,6 +717,7 @@ int clkdm_sleep(struct clockdomain *clkdm)

	return arch_clkdm->clkdm_sleep(clkdm);
 }
+EXPORT_SYMBOL(clkdm_sleep);

 /**
  * clkdm_wakeup - force clockdomain wakeup transition
@@ -739,6 +751,7 @@ int clkdm_wakeup(struct clockdomain *clkdm)

	return ret;
 }
+EXPORT_SYMBOL(clkdm_wakeup);

 /**
  * clkdm_allow_idle - enable hwsup idle transitions for clkdm
@@ -770,6 +783,7 @@ void clkdm_allow_idle(struct clockdomain *clkdm)
	arch_clkdm->clkdm_allow_idle(clkdm);
	pwrdm_clkdm_state_switch(clkdm);
 }
+EXPORT_SYMBOL(clkdm_allow_idle);

 /**
  * clkdm_deny_idle - disable hwsup idle transitions for clkdm
@@ -799,6 +813,7 @@ void clkdm_deny_idle(struct clockdomain *clkdm)

	arch_clkdm->clkdm_deny_idle(clkdm);
 }
+EXPORT_SYMBOL(clkdm_deny_idle);

 /**
  * clkdm_is_idle - Check if the clkdm hwsup/autoidle is enabled
@@ -870,6 +885,7 @@ int clkdm_clk_enable(struct clockdomain *clkdm, struct clk *clk)

	return 0;
 }
+EXPORT_SYMBOL(clkdm_clk_enable);

 /**
  * clkdm_clk_disable - remove an enabled downstream clock from this clkdm
@@ -918,4 +934,5 @@ int clkdm_clk_disable(struct clockdomain *clkdm, struct clk *clk)

	return 0;
 }
+EXPORT_SYMBOL(clkdm_clk_disable);

--
1.7.1
