From 34ed5d8d0768da64f68c4b821445600c4e08abf5 Mon Sep 17 00:00:00 2001
From: Leed Aguilar <leed.aguilar@ti.com>
Date: Mon, 7 Nov 2011 14:32:10 -0500
Subject: [PATCH 1/2] ARM: OMAP4: powerdomains: Export Power Domain APIs.

Export API's for testing the power domain framework

Change-Id: I308c154567b693d0901f891dc2d2cf12b8fb8570
Signed-off-by: Leed Aguilar <leed.aguilar@ti.com>
---
 arch/arm/mach-omap2/clockdomain2xxx_3xxx.c |    2 ++
 arch/arm/mach-omap2/powerdomain.c          |   28 ++++++++++++++++++++++++++++
 2 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/clockdomain2xxx_3xxx.c b/arch/arm/mach-omap2/clockdomain2xxx_3xxx.c
index db49baa..b7498e6 100644
--- a/arch/arm/mach-omap2/clockdomain2xxx_3xxx.c
+++ b/arch/arm/mach-omap2/clockdomain2xxx_3xxx.c
@@ -120,6 +120,7 @@ static int omap2_clkdm_sleep(struct clockdomain *clkdm)
				OMAP2_PM_PWSTCTRL);
	return 0;
 }
+EXPORT_SYMBOL(omap2_clkdm_sleep);

 static int omap2_clkdm_wakeup(struct clockdomain *clkdm)
 {
@@ -128,6 +129,7 @@ static int omap2_clkdm_wakeup(struct clockdomain *clkdm)
				OMAP2_PM_PWSTCTRL);
	return 0;
 }
+EXPORT_SYMBOL(omap2_clkdm_wakeup);

 static void omap2_clkdm_allow_idle(struct clockdomain *clkdm)
 {
diff --git a/arch/arm/mach-omap2/powerdomain.c b/arch/arm/mach-omap2/powerdomain.c
index 24a7a54..acd0a48 100644
--- a/arch/arm/mach-omap2/powerdomain.c
+++ b/arch/arm/mach-omap2/powerdomain.c
@@ -268,6 +268,7 @@ struct powerdomain *pwrdm_lookup(const char *name)

	return pwrdm;
 }
+EXPORT_SYMBOL(pwrdm_lookup);

 /**
  * pwrdm_for_each - call function on each registered clockdomain
@@ -296,6 +297,7 @@ int pwrdm_for_each(int (*fn)(struct powerdomain *pwrdm, void *user),

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_for_each);

 /**
  * pwrdm_add_clkdm - add a clockdomain to a powerdomain
@@ -344,6 +346,7 @@ int pwrdm_add_clkdm(struct powerdomain *pwrdm, struct clockdomain *clkdm)
 pac_exit:
	return ret;
 }
+EXPORT_SYMBOL(pwrdm_add_clkdm);

 /**
  * pwrdm_del_clkdm - remove a clockdomain from a powerdomain
@@ -384,6 +387,7 @@ int pwrdm_del_clkdm(struct powerdomain *pwrdm, struct clockdomain *clkdm)
 pdc_exit:
	return ret;
 }
+EXPORT_SYMBOL(pwrdm_del_clkdm);

 /**
  * pwrdm_for_each_clkdm - call function on each clkdm in a pwrdm
@@ -412,6 +416,7 @@ int pwrdm_for_each_clkdm(struct powerdomain *pwrdm,

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_for_each_clkdm);

 /**
  * pwrdm_get_voltdm - return a ptr to the voltdm that this pwrdm resides in
@@ -439,6 +444,7 @@ int pwrdm_get_mem_bank_count(struct powerdomain *pwrdm)

	return pwrdm->banks;
 }
+EXPORT_SYMBOL(pwrdm_get_mem_bank_count);

 /**
  * pwrdm_set_next_pwrst - set next powerdomain power state
@@ -474,6 +480,7 @@ int pwrdm_set_next_pwrst(struct powerdomain *pwrdm, u8 pwrst)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_set_next_pwrst);

 /**
  * pwrdm_read_next_pwrst - get next powerdomain power state
@@ -495,6 +502,7 @@ int pwrdm_read_next_pwrst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_read_next_pwrst);

 /**
  * pwrdm_read_pwrst - get current powerdomain power state
@@ -516,6 +524,7 @@ int pwrdm_read_pwrst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_read_pwrst);

 /**
  * pwrdm_read_prev_pwrst - get previous powerdomain power state
@@ -537,6 +546,7 @@ int pwrdm_read_prev_pwrst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_read_prev_pwrst);

 /**
  * pwrdm_set_logic_retst - set powerdomain logic power state upon retention
@@ -566,7 +576,9 @@ int pwrdm_set_logic_retst(struct powerdomain *pwrdm, u8 pwrst)
		ret = arch_pwrdm->pwrdm_set_logic_retst(pwrdm, pwrst);

	return ret;
+
 }
+EXPORT_SYMBOL(pwrdm_set_logic_retst);

 /**
  * pwrdm_set_mem_onst - set memory power state while powerdomain ON
@@ -604,6 +616,7 @@ int pwrdm_set_mem_onst(struct powerdomain *pwrdm, u8 bank, u8 pwrst)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_set_mem_onst);

 /**
  * pwrdm_set_mem_retst - set memory power state while powerdomain in RET
@@ -642,6 +655,7 @@ int pwrdm_set_mem_retst(struct powerdomain *pwrdm, u8 bank, u8 pwrst)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_set_mem_retst);

 /**
  * pwrdm_read_logic_pwrst - get current powerdomain logic retention power state
@@ -664,6 +678,7 @@ int pwrdm_read_logic_pwrst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_read_logic_pwrst);

 /**
  * pwrdm_read_prev_logic_pwrst - get previous powerdomain logic power state
@@ -706,6 +721,7 @@ int pwrdm_read_logic_retst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_read_logic_retst);

 /**
  * pwrdm_read_mem_pwrst - get current memory bank power state
@@ -821,6 +837,7 @@ int pwrdm_clear_all_prev_pwrst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_clear_all_prev_pwrst);

 /**
  * pwrdm_enable_hdwr_sar - enable automatic hardware SAR for a pwrdm
@@ -851,6 +868,7 @@ int pwrdm_enable_hdwr_sar(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_enable_hdwr_sar);

 /**
  * pwrdm_disable_hdwr_sar - disable automatic hardware SAR for a pwrdm
@@ -881,6 +899,7 @@ int pwrdm_disable_hdwr_sar(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_disable_hdwr_sar);

 /**
  * pwrdm_has_hdwr_sar - test whether powerdomain supports hardware SAR
@@ -922,6 +941,7 @@ int pwrdm_set_lowpwrstchange(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_set_lowpwrstchange);

 /**
  * pwrdm_wait_transition - wait for powerdomain power transition to finish
@@ -945,11 +965,13 @@ int pwrdm_wait_transition(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_wait_transition);

 int pwrdm_state_switch(struct powerdomain *pwrdm)
 {
	return _pwrdm_state_switch(pwrdm, PWRDM_STATE_NOW);
 }
+EXPORT_SYMBOL(pwrdm_state_switch);

 int pwrdm_clkdm_state_switch(struct clockdomain *clkdm)
 {
@@ -960,18 +982,21 @@ int pwrdm_clkdm_state_switch(struct clockdomain *clkdm)

	return -EINVAL;
 }
+EXPORT_SYMBOL(pwrdm_clkdm_state_switch);

 int pwrdm_pre_transition(void)
 {
	pwrdm_for_each(_pwrdm_pre_transition_cb, NULL);
	return 0;
 }
+EXPORT_SYMBOL(pwrdm_pre_transition);

 int pwrdm_post_transition(void)
 {
	pwrdm_for_each(_pwrdm_post_transition_cb, NULL);
	return 0;
 }
+EXPORT_SYMBOL(pwrdm_post_transition);

 /**
  * pwrdm_get_context_loss_count - get powerdomain's context loss count
@@ -1111,6 +1136,7 @@ exit_set:

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_wakeuplat_set_constraint);

 /**
  * pwrdm_wakeuplat_release_constraint - Release powerdomain wkuplat constraint
@@ -1160,6 +1186,7 @@ exit_rls:

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_wakeuplat_release_constraint);

 /**
  * pwrdm_wakeuplat_update_pwrst - Update power domain power state if needed
@@ -1208,3 +1235,4 @@ int pwrdm_wakeuplat_update_pwrst(struct powerdomain *pwrdm)

	return ret;
 }
+EXPORT_SYMBOL(pwrdm_wakeuplat_update_pwrst);
--
1.7.1
