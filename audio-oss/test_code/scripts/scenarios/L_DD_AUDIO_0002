#####################
# FILENAME: L_DD_AUDIO_0002
# Author  : Nishanth Menon
# Date    : Wed Apr 26 11:38:48 CDT 2006
# Copyright (C) 2006 Texas Instruments
#
# Description:
# Check the basic IOCTLS

foo   echo "L_DD_AUDIO_0002"

# Retrieve the formats supported
0001 dspget -r && dspget -b && dspget -c && dspget -f || exit 1
# Set the sampling rate
0002  REPORT=""; for i in $SAMPLE_RATES ; do dspset -r $i && CHECK=`dspget -r|grep "Sample rate is"|cut -d '|' -f 4` && [ $CHECK = $i ] && echo "Sample rate $i pass" || REPORT="$REPORT $i"; done; if [ -z $REPORT ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
# Set the channels
0003 REPORT=""; for i in $CHANNELS ; do dspset -c $i && CHECK=`dspget -c|grep "No. of channels are"|cut -d '|' -f 4` && [ $CHECK = $i ] && echo "Channel $i pass" || REPORT="$REPORT $i"; done ; if [ -z $REPORT ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
# Set the supported formats
0004 REPORT=""; for i in $FORMATS ; do dspset -f $i && CHECK=`dspget -f|grep "Format is "|cut -d '|' -f 4` && [ $CHECK = $i ] && echo "Format $i pass" || REPORT="$REPORT $i"; done; if [ -z $REPORT ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
# Set the bit sizes (formats)
0004a REPORT=""; for i in $BIT_SIZES ; do dspset -b $i && CHECK=`dspget -b|grep "Sample size is"|cut -d '|' -f 4` && [ $CHECK = $i ] && echo "Sample size  $i pass" || REPORT="$REPORT $i"; done; if [ -z $REPORT ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi

# Check the mixer ioctls
# left volume check
0005a REPORT="";for j in $MIXER_DEVICES_L ; do for i in $VOL_CHECK ; do echo $j $i 0;R1="";mixer $j $i 0 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 5|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:"; if [ -z "$R1" ]; then echo "pass" ; else echo "FAIL"; REPORT="$REPORT ($j,$i)";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
0005b REPORT="";for j in $MIXER_DEVICES_R ; do for i in $VOL_CHECK ; do echo $j 0 $i;R1="";mixer $j 0 $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 7|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:"; if [ -z "$R1" ]; then echo "pass" ; else "FAIL"; REPORT="$REPORT ($j,$i)";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
0005c REPORT="";for j in $MIXER_DEVICES_R ; do for i in $VOL_CHECK ; do echo $j $i $i;R1="";mixer $j $i $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 5|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:"; if [ -z "$R1" ]; then echo "pass" ; else "FAIL"; REPORT="$REPORT ($j,$i)";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi

#Check against bad devices
0005d1 REPORT="";for j in $MIXER_LESSBADDEVICES ; do for i in $VOL_CHECK ; do echo $j $i $i;R1="";mixer $j $i $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 5|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:"; if [ -z "$R1" ]; then echo "FAIL"; REPORT="$REPORT ($j,$i)"; else echo "(noSet)Pass";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
0005d2 REPORT="";for j in $MIXER_BADDEVICES ; do for i in $VOL_CHECK ; do echo $j $i $i;R1="";mixer $j $i $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 5|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:$R1:$CHECK:"; if [ -z "$R1" ]; then echo "(No Set)Pass"; else REPORT="$REPORT ($j,$i)"; echo "Fail";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi

# Check invalid volume values
0005e REPORT="";for j in $MIXER_DEVICES_R ; do for i in $VOL_UNCHECK; do echo $j 0 $i;R1="";mixer $j 0 $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 7|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:$R1:$CHECK:"; if [ -z "$R1" ]; then echo "(No Set)Pass"; else  echo "FAIL"; REPORT="$REPORT ($j,$i)"; echo "Fail";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
0005f REPORT="";for j in $MIXER_LESSBADDEVICES ; do for i in $VOL_UNCHECK; do echo $j 0 $i;R1="";mixer $j 0 $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 7|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:$R1:$CHECK:"; if [ -z "$R1" ]; then echo "(No Set)Pass"; else  echo "FAIL"; REPORT="$REPORT ($j,$i)"; echo "Fail";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi
0005g REPORT="";for j in $MIXER_BADDEVICES; do for i in $VOL_UNCHECK; do echo $j 0 $i;R1="";mixer $j 0 $i 2>$TMPFILE && CHECK=`cat $TMPFILE|grep "gain set to"|cut -d ' ' -f 7|cut -d'%' -f1` && [ "$CHECK" != "$i" ] && R1="1";echo -n "vol check $j->$i:$R1:$CHECK:"; if [ -z "$R1" ]; then echo "(No Set)Pass"; else  echo "FAIL"; REPORT="$REPORT ($j,$i)"; echo "Fail";fi;cat $TMPFILE; done; done; if [ -z "$REPORT" ]; then exit 0; else echo "FAILED: $REPORT"; exit 1; fi

bar   echo "L_DD_AUDIO_0002"
